/* eslint-env browser */
"use strict";
/**
 * Generated by scripts/generatePolyfill.js
 * Options:
 *     targetChromiumVersion: "70.0.3538.0"
 *     targetUA: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.0 Safari/537.36"
 *     unrecognizableFeaturesFeatures: "scripts/generatePolyfill/unrecognizableFeatures.json"
 *     flaggableFeatures: "[ "Object.assign", "Symbol", "Symbol.iterator", "Promise", "Object.setPrototypeOf", "Object.create", "Array.prototype.find", "Array.prototype.includes", "String.prototype.includes", "DOMTokenList.prototype.replace", "Array.prototype.filter", "Array.prototype.map", "Object.keys", "Array.prototype.keys", "Array.prototype.forEach", "DOMTokenList.prototype.forEach", "NodeList.prototype.forEach", "document", "Reflect.has", "Reflect", "Element.prototype.closest", "Array.from", "Element.prototype.classList", "Date.prototype.toISOString", "Element.prototype.before", "Element.prototype.remove", "DocumentFragment.prototype.append", "Element.prototype.append", "Number.MAX_SAFE_INTEGER", "Number.MIN_SAFE_INTEGER", "Array.prototype.indexOf", "Date.now", "MutationObserver", "String.prototype.trim", "Function.prototype.bind", "Function.prototype.name", "Element.prototype.after", "Array.isArray", "Reflect.defineProperty", "Element.prototype.animate", "Reflect.deleteProperty", "console.log", "console", "Array.prototype.sort", "Set", "JSON", "Array.prototype.values", "Map", "Array.prototype.entries", "Object.defineProperty", "localStorage", "String.prototype.startsWith", "console.error", "WeakMap", "Object.fromEntries", "String.prototype.anchor", "Object.values", "String.prototype.link", "RegExp.prototype.flags", "XMLHttpRequest", "String.prototype.padStart", "Intl.DateTimeFormat", "Intl", "String.prototype.endsWith", "console.info", "DocumentFragment.prototype.prepend", "Element.prototype.prepend", "Object.defineProperties", "Number.isSafeInteger", "Array.prototype.flat", "Array.prototype.reduce", "String.prototype.repeat", "console.warn", "URL.prototype.toJSON", "Element.prototype.matches", "matchMedia", "URL", "Object.entries", "Node.prototype.contains", "IntersectionObserver", "Number.isInteger", "Array.prototype.reduceRight", "globalThis", "Uint8Array", "ArrayBuffer.isView", "ArrayBuffer", "DataView", "String.prototype.codePointAt", "String.fromCodePoint", "Symbol.species", "Symbol.toPrimitive", "Array.prototype.fill", "Array.prototype.lastIndexOf", "Array.prototype.copyWithin", "fetch", "Blob", "atob", "Int8Array", "Uint8ClampedArray", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "Float64Array", "Symbol.prototype.description", "Object.getPrototypeOf", "Reflect.construct", "Intl.ListFormat", "Intl.NumberFormat", "Intl.RelativeTimeFormat", "Object.getOwnPropertyNames", "String.prototype.fixed", "Math.trunc", "Number.isNaN", "Object.is", "Math.sign", "String.prototype.normalize", "Array.prototype.findIndex", "Array.prototype.every", "Element.prototype.replaceWith", "URLSearchParams", "getComputedStyle", "Reflect.ownKeys", "console.debug", "Element.prototype.scrollIntoView", "Array.prototype.some", "Array.prototype.flatMap" ]"
 */
(() => {
    const script = document.createElement("script");
    script.src = "https://polyfill.alicdn.com/v3/polyfill.js?features=Object.assign%2CSymbol%2CSymbol.iterator%2CPromise%2CObject.setPrototypeOf%2CObject.create%2CArray.prototype.find%2CArray.prototype.includes%2CString.prototype.includes%2CDOMTokenList.prototype.replace%2CArray.prototype.filter%2CArray.prototype.map%2CObject.keys%2CArray.prototype.keys%2CArray.prototype.forEach%2CDOMTokenList.prototype.forEach%2CNodeList.prototype.forEach%2Cdocument%2CReflect.has%2CReflect%2CElement.prototype.closest%2CArray.from%2CElement.prototype.classList%2CDate.prototype.toISOString%2CElement.prototype.before%2CElement.prototype.remove%2CDocumentFragment.prototype.append%2CElement.prototype.append%2CNumber.MAX_SAFE_INTEGER%2CNumber.MIN_SAFE_INTEGER%2CArray.prototype.indexOf%2CDate.now%2CMutationObserver%2CString.prototype.trim%2CFunction.prototype.bind%2CFunction.prototype.name%2CElement.prototype.after%2CArray.isArray%2CReflect.defineProperty%2CElement.prototype.animate%2CReflect.deleteProperty%2Cconsole.log%2Cconsole%2CArray.prototype.sort%2CSet%2CJSON%2CArray.prototype.values%2CMap%2CArray.prototype.entries%2CObject.defineProperty%2ClocalStorage%2CString.prototype.startsWith%2Cconsole.error%2CWeakMap%2CObject.fromEntries%2CString.prototype.anchor%2CObject.values%2CString.prototype.link%2CRegExp.prototype.flags%2CXMLHttpRequest%2CString.prototype.padStart%2CIntl.DateTimeFormat%2CIntl%2CString.prototype.endsWith%2Cconsole.info%2CDocumentFragment.prototype.prepend%2CElement.prototype.prepend%2CObject.defineProperties%2CNumber.isSafeInteger%2CArray.prototype.flat%2CArray.prototype.reduce%2CString.prototype.repeat%2Cconsole.warn%2CURL.prototype.toJSON%2CElement.prototype.matches%2CmatchMedia%2CURL%2CObject.entries%2CNode.prototype.contains%2CIntersectionObserver%2CNumber.isInteger%2CArray.prototype.reduceRight%2CglobalThis%2CUint8Array%2CArrayBuffer.isView%2CArrayBuffer%2CDataView%2CString.prototype.codePointAt%2CString.fromCodePoint%2CSymbol.species%2CSymbol.toPrimitive%2CArray.prototype.fill%2CArray.prototype.lastIndexOf%2CArray.prototype.copyWithin%2Cfetch%2CBlob%2Catob%2CInt8Array%2CUint8ClampedArray%2CInt16Array%2CUint16Array%2CInt32Array%2CUint32Array%2CFloat32Array%2CFloat64Array%2CSymbol.prototype.description%2CObject.getPrototypeOf%2CReflect.construct%2CIntl.ListFormat%2CIntl.NumberFormat%2CIntl.RelativeTimeFormat%2CObject.getOwnPropertyNames%2CString.prototype.fixed%2CMath.trunc%2CNumber.isNaN%2CObject.is%2CMath.sign%2CString.prototype.normalize%2CArray.prototype.findIndex%2CArray.prototype.every%2CElement.prototype.replaceWith%2CURLSearchParams%2CgetComputedStyle%2CReflect.ownKeys%2Cconsole.debug%2CElement.prototype.scrollIntoView%2CArray.prototype.some%2CArray.prototype.flatMap";
    script.async = true;
    const polyfillPromise = new Promise((res) => {
        script.addEventListener("load", () => res(), {
            once: true,
        });
        script.addEventListener("error", () => res(), {
            once: true,
        });
    });
    Object.defineProperty(window, "polyfillPromise", {
        configurable: false,
        enumerable: true,
        writable: false,
        value: polyfillPromise,
    });
})();
